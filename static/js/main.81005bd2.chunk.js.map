{"version":3,"sources":["components/Chart/styles.ts","components/Chart/index.tsx","utils/index.ts","components/Filer/styles.ts","components/Filer/index.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","chartConfig","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","Chart","useState","createRef","chartRef","chartInstance","setChartInstance","useEffect","current","newChartInstance","ChartJS","console","log","update","ref","regexToFilterDates","messages","map","message","match","ChartWrapper","InputWrapper","ResultWrapper","Filer","fileReader","content","setContent","setData","hasFile","setHasFile","handleFileRead","e","response","fileContent","messageArray","uniqueMessagesArray","frequencyArray","count","lastMessage","push","forEach","index","regexToCountMessages","result","length","id","className","accept","onChange","file","FileReader","onloadend","readAsText","target","files","item","handleFile","htmlFor","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81005bd2.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 90%;\r\n  margin: 20px 0px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;","import React, { useState, createRef, useEffect } from 'react';\r\nimport ChartJS from 'chart.js';\r\nimport { Wrapper } from './styles';\r\n\r\nconst chartConfig = {\r\n  type: 'line',\r\n  data: {\r\n    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n    datasets: [{\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)'\r\n      ],\r\n      borderWidth: 1\r\n    }]\r\n  },\r\n  options: {\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          beginAtZero: true\r\n        }\r\n      }]\r\n    }\r\n  }\r\n}\r\n\r\ntype Props = {\r\n  labels: string[],\r\n  data: number[]\r\n}\r\n\r\nconst Chart: React.FC<Props> = ({ labels, data }) => {\r\n  const [chartRef] = useState(createRef<HTMLCanvasElement>())\r\n\r\n  const [chartInstance, setChartInstance] = useState<Chart>()\r\n\r\n  useEffect(() => {\r\n    if (chartRef && chartRef.current) {\r\n      const newChartInstance = new ChartJS(chartRef.current, chartConfig);\r\n      setChartInstance(newChartInstance);\r\n    }\r\n\r\n  }, [chartRef])\r\n\r\n  useEffect(() => {\r\n    if (chartInstance && chartInstance.data.datasets) {\r\n      chartInstance.data.labels = labels\r\n      chartInstance.data.datasets = [{\r\n        label: 'Messages',\r\n        data,\r\n        backgroundColor: 'rgba(138, 228, 237, 0.2)',\r\n        borderColor: 'rgba(138, 228, 237, 1)',\r\n      }]\r\n      console.log(chartInstance.data)\r\n      chartInstance.update();\r\n    }\r\n  }, [labels, data, chartInstance])\r\n\r\n  return <Wrapper>\r\n    <canvas ref={chartRef} ></canvas>\r\n  </Wrapper>\r\n}\r\n\r\nexport default Chart;","export const regexToCountMessages = (fileContent: string) => {\r\n  // PARA ANDROID:\r\n  // const messageArray = fileContent.match(/(0?[1-9]|1[012])[/](0?[1-9]|[12][0-9]|3[01])[/]\\d{2}(, )(([0-1][0-9]|[2][0-3]):([0-5][0-9]))( - )/g)\r\n  // PARA IOS:\r\n  // const messageArray = fileContent.match(/(\\[)(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/]\\d{2}( )(([0-1][0-9]|[2][0-3]):([0-5][0-9])):([0-5][0-9])(] )/g)\r\n  // PARA AMBOS: (TESTE!!!)\r\n  const messageArray = fileContent.match(/((\\[)(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/]\\d{2}( )(([0-1][0-9]|[2][0-3]):([0-5][0-9])):([0-5][0-9])(] ))|((0?[1-9]|1[012])[/](0?[1-9]|[12][0-9]|3[01])[/]\\d{2}(, )(([0-1][0-9]|[2][0-3]):([0-5][0-9]))( - ))/g)\r\n  const messages: string[] = regexToFilterDates(messageArray)\r\n  console.log(messages)\r\n\r\n  let uniqueMessagesArray: string[] = []\r\n  let frequencyArray: number[] = []\r\n  let count = 0\r\n  let lastMessage = ''\r\n\r\n  messages.push('dummy')\r\n  messages.forEach((message, index) => {\r\n    if ((index > 0 && lastMessage !== message)) {\r\n      uniqueMessagesArray.push(lastMessage)\r\n      frequencyArray.push(count);\r\n      lastMessage = message\r\n    } else {\r\n      count++\r\n      lastMessage = message\r\n    }\r\n  })\r\n\r\n  return { uniqueMessagesArray, frequencyArray }\r\n}\r\n\r\nexport const regexToFilterDates: any = (messages: string[]) => {\r\n  // PARA ANDROID:\r\n  // return messages.map(message => message.match(/(0?[1-9]|1[012])[/](0?[1-9]|[12][0-9]|3[01])[/]\\d{2}/)![0])\r\n  // PARA IOS:\r\n  // return messages.map(message => message.match(/(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/]\\d{2}/)![0])\r\n  // PARA AMBOS: (TESTE!!!)\r\n  return messages.map(message => message.match(/(((0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/]\\d{2})|((0?[1-9]|1[012])[/](0?[1-9]|[12][0-9]|3[01])[/]\\d{2}))/)![0])\r\n}","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  > span {\r\n    font-family: 'Fugaz One', sans-serif;\r\n    font-size: 6.5em;\r\n    margin-top: 30px;\r\n    line-height: 65%;\r\n    color: white;\r\n    text-shadow: 5px 5px rgba(0, 0, 0, 0.5);\r\n  }\r\n`\r\n\r\nexport const ChartWrapper = styled.div`\r\n  background-color: white;\r\n  width: 110vh;\r\n  height: 70vh;\r\n  margin-top: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 15px;\r\n  box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.5);\r\n`\r\n\r\nexport const InputWrapper = styled.div`\r\n  margin-top: 5%;\r\n  width: 90%;\r\n  height: 15%;\r\n  border: 4px dotted lightgray;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n  \r\n\r\n  input {\r\n    width: 60%;\r\n    height: 15%;\r\n    opacity: 0;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    border-radius: 15px;\r\n    background-color: red;\r\n\r\n    /* z-index: -1; */\r\n  } \r\n\r\n  input + label {\r\n    font-size: 1.60em;\r\n    font-weight: 700;\r\n    color: lightgray;\r\n    display: inline-block;\r\n}\r\n\r\nlabel + p {\r\n  font-size: 1em;\r\n    font-weight: 700;\r\n    color: lightgray;\r\n    display: inline-block;\r\n    margin: 0;\r\n}\r\n\r\ninput:focus + label,\r\ninput + label:hover {\r\n    background-color: none;\r\n}\r\n`\r\n\r\nexport const ResultWrapper = styled.div`\r\n  margin-top: 5%;\r\n  width: 90%;\r\n  height: 15%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n  font-size: 2em;\r\n  font-weight: 700;\r\n  color: lightgray;\r\n\r\n  p {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0 10px;\r\n\r\n    p {\r\n      margin: 0 10px;\r\n      color: rgba(255, 159, 64, 1);\r\n    }\r\n\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\nimport Chart from '../Chart'\r\nimport { regexToCountMessages } from '../../utils'\r\n\r\nimport { Wrapper, ChartWrapper, InputWrapper, ResultWrapper } from './styles'\r\n\r\ntype response = {\r\n  uniqueMessagesArray: string[],\r\n  frequencyArray: number[]\r\n}\r\n\r\nconst Filer = () => {\r\n  const [content, setContent] = useState<string[]>(['', '', '', '', '', ''])\r\n  const [data, setData] = useState<number[]>([8, 2, 3, 4, 5, 6])\r\n  const [hasFile, setHasFile] = useState<Boolean>(false)\r\n  let fileReader: any;\r\n\r\n  const handleFileRead = (e: any) => {\r\n    const fullMessages = fileReader.result;\r\n    const response: response = regexToCountMessages(fullMessages)\r\n    setContent(response.uniqueMessagesArray)\r\n    setData(response.frequencyArray)\r\n    setHasFile(true)\r\n  }\r\n\r\n  const handleFile = (file: React.ChangeEvent<HTMLInputElement>) => {\r\n    fileReader = new FileReader();\r\n    fileReader.onloadend = handleFileRead;\r\n    fileReader.readAsText(file.target.files?.item(0))\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <span>\r\n        chatchart\r\n      </span>\r\n      <ChartWrapper>\r\n        {hasFile ?\r\n          <ResultWrapper>\r\n            <span>\r\n              <p>\r\n                <p>\r\n                  {data[data.length - 1]}\r\n                </p> messages in\r\n              <p>\r\n                  {content.length}\r\n                </p> days 😱\r\n            </p>\r\n            </span>\r\n          </ResultWrapper>\r\n          :\r\n          <InputWrapper>\r\n            <input\r\n              type='file'\r\n              id='file'\r\n              className='input-file'\r\n              accept='.txt'\r\n              onChange={e => handleFile(e)}\r\n            />\r\n            <label htmlFor=\"file\">Click or drop a WhatsApp chat history file here to see the magic 😉</label>\r\n            <p>(We do NOT keep your messages!)</p>\r\n          </InputWrapper>\r\n        }\r\n        <Chart labels={content} data={data} />\r\n      </ChartWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Filer;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    font-family: 'Baloo 2', cursive;\r\n    background: #FDC830;  /* fallback for old browsers */\r\n    background: -webkit-linear-gradient(to right, #FFA552, #FF8C42);  /* Chrome 10-25, Safari 5.1-6 */\r\n    background: linear-gradient(to right, #FFA552, #FF8C42); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n\r\n  }\r\n\r\n`;\r\n","import React from 'react'\nimport Filer from './components/Filer'\n\nimport { GlobalStyle } from './App.styles'\n\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Filer />\n    </>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}